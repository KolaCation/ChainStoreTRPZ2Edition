// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace ChainStore.DataAccessLayerImpl.Migrations
{
    [DbContext(typeof(MyDbContext))]
    internal class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ChainStore.DataAccessLayerImpl.DbModels.BookDbModel", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("ClientId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset>("CreationTime")
                    .HasColumnType("datetimeoffset");

                b.Property<DateTimeOffset>("ExpirationTime")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid>("ProductId")
                    .HasColumnType("uniqueidentifier");

                b.Property<int>("ReserveDaysCount")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.ToTable("Books");
            });

            modelBuilder.Entity("ChainStore.DataAccessLayerImpl.DbModels.CategoryDbModel", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(max)");

                b.Property<Guid?>("StoreDbModelId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("StoreDbModelId");

                b.ToTable("Categories");

                b.HasData(
                    new
                    {
                        Id = new Guid("080917f2-e2fa-4581-a7c2-743b259852ef"),
                        Name = "Laptop"
                    },
                    new
                    {
                        Id = new Guid("1696b27d-8452-458a-994b-fdeef9cff690"),
                        Name = "Mouse"
                    },
                    new
                    {
                        Id = new Guid("f13e35c0-684c-470c-9f9d-0f35867a1bda"),
                        Name = "USB"
                    });
            });

            modelBuilder.Entity("ChainStore.DataAccessLayerImpl.DbModels.ClientDbModel", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<double>("Balance")
                    .HasColumnType("float");

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Clients");
            });

            modelBuilder.Entity("ChainStore.DataAccessLayerImpl.DbModels.ProductDbModel", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("CategoryId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(max)");

                b.Property<double>("PriceInUAH")
                    .HasColumnType("float");

                b.Property<int>("ProductStatus")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("CategoryId");

                b.ToTable("Products");

                b.HasData(
                    new
                    {
                        Id = new Guid("e15a240e-bced-4458-a6b6-347e06abe88c"),
                        CategoryId = new Guid("080917f2-e2fa-4581-a7c2-743b259852ef"),
                        Name = "HP 450 G1",
                        PriceInUAH = 20000.0,
                        ProductStatus = 0
                    },
                    new
                    {
                        Id = new Guid("76946bca-9fb0-4eff-8b46-a4949e256a1c"),
                        CategoryId = new Guid("080917f2-e2fa-4581-a7c2-743b259852ef"),
                        Name = "HP 450 G2",
                        PriceInUAH = 30000.0,
                        ProductStatus = 0
                    },
                    new
                    {
                        Id = new Guid("6e367c9e-2c95-4552-9599-820a15c29e7a"),
                        CategoryId = new Guid("080917f2-e2fa-4581-a7c2-743b259852ef"),
                        Name = "HP 450 G3",
                        PriceInUAH = 40000.0,
                        ProductStatus = 0
                    },
                    new
                    {
                        Id = new Guid("d713dc3b-92a3-45cc-befb-f70a82c0323c"),
                        CategoryId = new Guid("080917f2-e2fa-4581-a7c2-743b259852ef"),
                        Name = "HP 450 G4",
                        PriceInUAH = 50000.0,
                        ProductStatus = 0
                    },
                    new
                    {
                        Id = new Guid("004f7b54-d482-4418-b6f4-ded434ee2d76"),
                        CategoryId = new Guid("080917f2-e2fa-4581-a7c2-743b259852ef"),
                        Name = "HP 850 G5",
                        PriceInUAH = 60000.0,
                        ProductStatus = 0
                    },
                    new
                    {
                        Id = new Guid("437de9d5-f77e-43a3-9b1c-490e78a782a7"),
                        CategoryId = new Guid("1696b27d-8452-458a-994b-fdeef9cff690"),
                        Name = "LogTech G12",
                        PriceInUAH = 1000.0,
                        ProductStatus = 0
                    },
                    new
                    {
                        Id = new Guid("54da41e7-1272-4a8c-bf06-da6010247a7c"),
                        CategoryId = new Guid("1696b27d-8452-458a-994b-fdeef9cff690"),
                        Name = "X7",
                        PriceInUAH = 2000.0,
                        ProductStatus = 0
                    },
                    new
                    {
                        Id = new Guid("d10d49a3-dbfa-4946-a3bd-66f93b62e5e1"),
                        CategoryId = new Guid("080917f2-e2fa-4581-a7c2-743b259852ef"),
                        Name = "HP 450 G1",
                        PriceInUAH = 20000.0,
                        ProductStatus = 0
                    },
                    new
                    {
                        Id = new Guid("5445426b-308e-4344-9a73-ca39cb5bc674"),
                        CategoryId = new Guid("080917f2-e2fa-4581-a7c2-743b259852ef"),
                        Name = "HP 450 G1",
                        PriceInUAH = 20000.0,
                        ProductStatus = 0
                    },
                    new
                    {
                        Id = new Guid("611c8fab-b1c5-485e-a8ab-d078deb9f2d8"),
                        CategoryId = new Guid("080917f2-e2fa-4581-a7c2-743b259852ef"),
                        Name = "HP 450 G1",
                        PriceInUAH = 20000.0,
                        ProductStatus = 0
                    },
                    new
                    {
                        Id = new Guid("c8baed60-1600-483d-9d3e-6004cabc19c1"),
                        CategoryId = new Guid("080917f2-e2fa-4581-a7c2-743b259852ef"),
                        Name = "HP 450 G1",
                        PriceInUAH = 20000.0,
                        ProductStatus = 0
                    });
            });

            modelBuilder.Entity("ChainStore.DataAccessLayerImpl.DbModels.PurchaseDbModel", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("ClientId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset>("CreationTime")
                    .HasColumnType("datetimeoffset");

                b.Property<double>("PriceAtPurchaseMoment")
                    .HasColumnType("float");

                b.Property<Guid>("ProductId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.ToTable("Purchases");
            });

            modelBuilder.Entity("ChainStore.DataAccessLayerImpl.DbModels.StoreCategoryDbModel", b =>
            {
                b.Property<Guid>("StoreDbModelId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("CategoryDbModelId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("StoreDbModelId", "CategoryDbModelId");

                b.HasIndex("CategoryDbModelId");

                b.ToTable("StoreCategoryRelation");

                b.HasData(
                    new
                    {
                        StoreDbModelId = new Guid("a46c798b-2b14-4a81-bb1e-bba9c3cad640"),
                        CategoryDbModelId = new Guid("080917f2-e2fa-4581-a7c2-743b259852ef")
                    },
                    new
                    {
                        StoreDbModelId = new Guid("a46c798b-2b14-4a81-bb1e-bba9c3cad640"),
                        CategoryDbModelId = new Guid("1696b27d-8452-458a-994b-fdeef9cff690")
                    });
            });

            modelBuilder.Entity("ChainStore.DataAccessLayerImpl.DbModels.StoreDbModel", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Location")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(max)");

                b.Property<double>("Profit")
                    .HasColumnType("float");

                b.HasKey("Id");

                b.ToTable("Stores");

                b.HasData(
                    new
                    {
                        Id = new Guid("a46c798b-2b14-4a81-bb1e-bba9c3cad640"),
                        Location = "10 Pandora Street",
                        Name = "Shields and Weapons",
                        Profit = 0.0
                    });
            });

            modelBuilder.Entity("ChainStore.DataAccessLayerImpl.DbModels.StoreProductDbModel", b =>
            {
                b.Property<Guid>("StoreDbModelId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("ProductDbModelId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("StoreDbModelId", "ProductDbModelId");

                b.HasIndex("ProductDbModelId");

                b.ToTable("StoreProductRelation");

                b.HasData(
                    new
                    {
                        StoreDbModelId = new Guid("a46c798b-2b14-4a81-bb1e-bba9c3cad640"),
                        ProductDbModelId = new Guid("e15a240e-bced-4458-a6b6-347e06abe88c")
                    },
                    new
                    {
                        StoreDbModelId = new Guid("a46c798b-2b14-4a81-bb1e-bba9c3cad640"),
                        ProductDbModelId = new Guid("d10d49a3-dbfa-4946-a3bd-66f93b62e5e1")
                    },
                    new
                    {
                        StoreDbModelId = new Guid("a46c798b-2b14-4a81-bb1e-bba9c3cad640"),
                        ProductDbModelId = new Guid("5445426b-308e-4344-9a73-ca39cb5bc674")
                    },
                    new
                    {
                        StoreDbModelId = new Guid("a46c798b-2b14-4a81-bb1e-bba9c3cad640"),
                        ProductDbModelId = new Guid("611c8fab-b1c5-485e-a8ab-d078deb9f2d8")
                    },
                    new
                    {
                        StoreDbModelId = new Guid("a46c798b-2b14-4a81-bb1e-bba9c3cad640"),
                        ProductDbModelId = new Guid("c8baed60-1600-483d-9d3e-6004cabc19c1")
                    },
                    new
                    {
                        StoreDbModelId = new Guid("a46c798b-2b14-4a81-bb1e-bba9c3cad640"),
                        ProductDbModelId = new Guid("76946bca-9fb0-4eff-8b46-a4949e256a1c")
                    },
                    new
                    {
                        StoreDbModelId = new Guid("a46c798b-2b14-4a81-bb1e-bba9c3cad640"),
                        ProductDbModelId = new Guid("6e367c9e-2c95-4552-9599-820a15c29e7a")
                    },
                    new
                    {
                        StoreDbModelId = new Guid("a46c798b-2b14-4a81-bb1e-bba9c3cad640"),
                        ProductDbModelId = new Guid("d713dc3b-92a3-45cc-befb-f70a82c0323c")
                    },
                    new
                    {
                        StoreDbModelId = new Guid("a46c798b-2b14-4a81-bb1e-bba9c3cad640"),
                        ProductDbModelId = new Guid("004f7b54-d482-4418-b6f4-ded434ee2d76")
                    },
                    new
                    {
                        StoreDbModelId = new Guid("a46c798b-2b14-4a81-bb1e-bba9c3cad640"),
                        ProductDbModelId = new Guid("437de9d5-f77e-43a3-9b1c-490e78a782a7")
                    },
                    new
                    {
                        StoreDbModelId = new Guid("a46c798b-2b14-4a81-bb1e-bba9c3cad640"),
                        ProductDbModelId = new Guid("54da41e7-1272-4a8c-bf06-da6010247a7c")
                    });
            });

            modelBuilder.Entity("ChainStore.Domain.Identity.Role", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("RoleName")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Roles");
            });

            modelBuilder.Entity("ChainStore.Domain.Identity.User", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("ClientId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Email")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("HashedPassword")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("UserName")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Users");
            });

            modelBuilder.Entity("ChainStore.Domain.Identity.UserRole", b =>
            {
                b.Property<Guid>("UserId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("RoleId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("UserId", "RoleId");

                b.ToTable("UserRoles");
            });

            modelBuilder.Entity("ChainStore.DataAccessLayerImpl.DbModels.CategoryDbModel", b =>
            {
                b.HasOne("ChainStore.DataAccessLayerImpl.DbModels.StoreDbModel", null)
                    .WithMany("CategoryDbModels")
                    .HasForeignKey("StoreDbModelId");
            });

            modelBuilder.Entity("ChainStore.DataAccessLayerImpl.DbModels.ProductDbModel", b =>
            {
                b.HasOne("ChainStore.DataAccessLayerImpl.DbModels.CategoryDbModel", "CategoryDbModel")
                    .WithMany("ProductDbModels")
                    .HasForeignKey("CategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("ChainStore.DataAccessLayerImpl.DbModels.StoreCategoryDbModel", b =>
            {
                b.HasOne("ChainStore.DataAccessLayerImpl.DbModels.CategoryDbModel", "CategoryDbModel")
                    .WithMany("StoreCategoryRelation")
                    .HasForeignKey("CategoryDbModelId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("ChainStore.DataAccessLayerImpl.DbModels.StoreDbModel", "StoreDbModel")
                    .WithMany("StoreCategoryRelation")
                    .HasForeignKey("StoreDbModelId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("ChainStore.DataAccessLayerImpl.DbModels.StoreProductDbModel", b =>
            {
                b.HasOne("ChainStore.DataAccessLayerImpl.DbModels.ProductDbModel", "ProductDbModel")
                    .WithMany("StoreProductRelation")
                    .HasForeignKey("ProductDbModelId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("ChainStore.DataAccessLayerImpl.DbModels.StoreDbModel", "StoreDbModel")
                    .WithMany("StoreProductRelation")
                    .HasForeignKey("StoreDbModelId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });
#pragma warning restore 612, 618
        }
    }
}